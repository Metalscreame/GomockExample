// Code generated by MockGen. DO NOT EDIT.
// Source: GomockExample/src/models (interfaces: UserPersistence)

// Package main is a generated GoMock package.
package mocks

import (
	models "GomockExample/src/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUserPersistence is a mock of UserPersistence interface
type MockUserPersistence struct {
	ctrl     *gomock.Controller
	recorder *MockUserPersistenceMockRecorder
}

// MockUserPersistenceMockRecorder is the mock recorder for MockUserPersistence
type MockUserPersistenceMockRecorder struct {
	mock *MockUserPersistence
}

// NewMockUserPersistence creates a new mock instance
func NewMockUserPersistence(ctrl *gomock.Controller) *MockUserPersistence {
	mock := &MockUserPersistence{ctrl: ctrl}
	mock.recorder = &MockUserPersistenceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUserPersistence) EXPECT() *MockUserPersistenceMockRecorder {
	return m.recorder
}

// Delete mocks base method
func (m *MockUserPersistence) Delete(arg0 models.User) error {
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockUserPersistenceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockUserPersistence)(nil).Delete), arg0)
}

// Save mocks base method
func (m *MockUserPersistence) Save(arg0 models.User) error {
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockUserPersistenceMockRecorder) Save(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockUserPersistence)(nil).Save), arg0)
}
